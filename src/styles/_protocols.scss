@use 'mixins' as m;
@use 'theme';
@use 'sass:color';
@use 'variables' as v;

#protocol-builder {
    ul {
        list-style: none;
        margin: 4px 0 4px 0;
        padding: 0;
        display: flex;
    }
    
    .junction {
        text-align: center;
    }

    ul {
        display: flex;

        .children {
            flex-grow: 1;
        }
    }

    ul,
    .junction,
    ul .constituent {
        margin: .4rem .6rem;
    }
    
    ul,
    .constituent {
        @include m.border;
        background-color: theme.$baseBgColor;
        overflow: hidden;
    }
    
    .constituent {
        display: flex;
        justify-content: space-between;
        align-items: stretch;
    
        .protocol-constituent {
            display: flex;
            align-items: center;
        }
    }

    .constituent .controls {
        background-color: rgba(0,0,0,0.1);
        display: flex;
        align-items: center;
        justify-content: center;

        .drag-handle {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 2rem;
            color: rgba(0,0,0,.3);
            cursor: move;
            transition: color .1s;
        
            &:hover {
                color: rgba(0,0,0,.7);
            }
        }
    }

    .delete-constituent {
        border-width: 0 0 0 2px;
        border-radius: 0;
    }

    .negation {
        appearance: none;

        &::after {
            content: "Â¬";
            color: color.scale(theme.$baseTextColor, $alpha: -75%);
            font-weight: bold;
            display: block;
            line-height: 1.75rem;
            padding: 0 v.$pad-h 0.25rem v.$pad-h;
            background-color: color.scale(theme.$baseTextColor, $alpha: -90%);
            transition: all .1s;
        }

        &:hover::after {
            background-color: color.scale(theme.$baseTextColor, $alpha: -95%);
        }
    
        &:active::after {
            background-color: color.scale(theme.$baseTextColor, $alpha: -85%);
        }

        &:checked::after {
            color: theme.$baseTextColor;
        }
    }
}