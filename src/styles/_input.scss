@use 'variables'as v;
@use 'mixins'as m;
@use 'theme';
@use 'sass:color';

input[type=text]:disabled {
    background-color: color.scale(theme.$baseTextColor, $alpha: -90%);
    color: color.scale(theme.$baseTextColor, $alpha: -50%);
    cursor: not-allowed;
}

input:not([type=checkbox]), button, select {
    -webkit-appearance: none;
    -moz-appearance:    none;
    appearance:         none;
    box-sizing: border-box;
    padding: 0 v.$pad-h;
    line-height: 2rem;
    white-space: nowrap;
    border: 2px solid color.scale(theme.$baseTextColor, $alpha: -85%);
    color: theme.$baseTextColor;
    background-color: theme.$baseBgColor;
    box-shadow: 0 0 0 0 theme.$lightBlue;
    transition: box-shadow .1s;

    &:focus {
        outline: none;
        box-shadow: 0 0 0 4px theme.$lightBlue;
        z-index: 5;
    }
}

button,
input[type=button] {
    appearance: none;
    background-color: color.scale(theme.$baseTextColor, $alpha: -90%);
    transition: background-color .1s;
    border-radius: v.$border-radius;
    cursor: default;

    &:disabled {
        color: color.scale(theme.$baseTextColor, $alpha: -50%);
        cursor: not-allowed;
    }

    &:not(:disabled):hover {
        background-color: color.scale(theme.$baseTextColor, $alpha: -95%);
    }

    &:not(:disabled):active {
        background-color: color.scale(theme.$baseTextColor, $alpha: -85%);
    }
}

select {
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 48'><path fill='#{theme.$baseTextColor}' d='M23.7 17.3c.9 1.5-.2 3.5-2 3.5H2.3c-1.8 0-2.9-1.9-2-3.5L10 1.1c.9-1.5 3-1.5 3.9 0 .1 0 9.8 16.2 9.8 16.2zM.3 30.7c-.9-1.5.2-3.5 2-3.5h19.4c1.8 0 2.9 1.9 2 3.5L14 46.9c-.9 1.5-3 1.5-3.9 0C10 46.9.3 30.7.3 30.7z'/></svg>");
    background-repeat: no-repeat;
    background-position: center right (v.$pad-h / 1.5);
    background-origin: padding-box;
    background-size: .5rem;
    padding-right: v.$pad-h * 1.5;
}

label {
    padding: 0 v.$pad-h / 2;
    margin-bottom: v.$pad-v / 4;
    display: block;
    font-size: 80%;
    color: color.scale(theme.$baseTextColor, $alpha: -50%);
}

// Set of grouped, but separate inputs
.input-set {
    input:not([type=checkbox]), button, select, .input-group {
        &:not(:last-child) {
            margin-right: v.$pad-h / 2;
        }
    }
}

// Set of connected inputs
.input-group {
    display: flex;
    width: 100%;

    &.right {
        justify-content: flex-end;

        input, button, select {
            flex-grow: unset;
        }
    }

    &:not(:last-child) {
        margin-bottom: v.$pad-v;
    }

    input:not([type=button]), select {
        width: 100%
    }

    input:not([type=checkbox]), button, select {
        border-right-width: 0;
        flex-grow: 1;
        border-radius: 0;

        &:first-child {
            border-radius: v.$border-radius 0 0 v.$border-radius;
        }

        &:last-child {
            border-right-width: 2px;
            border-radius: 0 v.$border-radius v.$border-radius 0;
        }
    
        &:only-child {
            border-radius: v.$border-radius;
        }
    }

    &:focus-within {
        box-shadow: 0 0 0 4px color.scale(theme.$lightBlue, $alpha: -25%);
        border-radius: v.$border-radius;
    }
}